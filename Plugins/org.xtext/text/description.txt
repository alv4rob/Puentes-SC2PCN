Model SmaC

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package smaC <http://www.xtext.org/SmaC>

  Class File
    Reference version : Version
    Attribute experimentalVersion : EString
    Reference library : Library<<0..*>>
    Reference imports : Import<<0..*>>
    Reference interfaces : Interface<<0..*>>
    Reference abstractContracts : AbstractContract<<0..*>>
    Reference contracts : Contract<<0..*>>

  Class Version
    Attribute symbol : EString
    Attribute numberVersion : EString
    Attribute symbolComparation : EString
    Attribute numberVersion2 : EString

  Class Library
    Attribute name : EString
    Reference structs : PersonalizedStruct<<0..*>>
    Reference enums : Enum<<0..*>>
    Reference functions : Clause<<0..*>>

  Class Import
    Attribute name : EString
    Attribute alias : EString

  Class Element
    Attribute name : EString

  Class Interface -> Element
    Reference interfaceEvents : Event<<0..*>>
    Reference interfaceFunction : DeclarationFunctionInterface<<0..*>>

  Class DeclarationFunctionInterface
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>
    Attribute modifier : EString
    Reference outputParams : OutputParam<<0..*>>

  Class DeclarationFunctionAbstractContract
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>
    Attribute visibility : Visibility
    Attribute modifier : EString
    Attribute virtual : EString
    Reference outputParams : OutputParam<<0..*>>

  Class AbstractContract -> Element
    Reference superType : Element<<0..*>>
    Reference modifiers : Modifier<<0..*>>
    Reference events : Event<<0..*>>
    Reference errors : Error<<0..*>>
    Reference clauses : DeclarationFunctionAbstractContract<<0..*>>

  Class Contract -> Element
    Reference superType : Element<<0..*>>
    Reference localEnumerators : Enum<<0..*>>
    Reference localProperties : Properties<<0..*>>
    Reference localMappingProperties : Mapping<<0..*>>
    Reference structs : PersonalizedStruct<<0..*>>
    Reference structUser : User
    Reference structCompany : Company
    Reference libraries : Library<<0..*>>
    Reference constructors : Constructor<<0..*>>
    Reference modifiers : Modifier<<0..*>>
    Reference events : Event<<0..*>>
    Reference errors : Error<<0..*>>
    Reference clauses : Clause<<0..*>>

  Class Constructor
    Reference inputParams : InputParam<<0..*>>
    Attribute type : EString
    Reference constructorContractInherance : Contract<<0..*>>
    Reference inputParamsConstructorContractInherance : InputParam<<0..*>>
    Attribute payable : EString
    Reference restrictions : RestrictionClause<<0..*>>
    Reference conditions : Condition<<0..*>>
    Reference undeterminedLoops : UnDeterminedLoop<<0..*>>
    Reference determinedLoops : ForLoop<<0..*>>
    Attribute attributesInitialization : EString<<0..*>>

  Class Event
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>

  Class Error
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>

  Class Modifier
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>
    Reference conditionRestricion : RestrictionClause<<0..*>>
    Attribute expressionsAssignValueBeforeMark : EString<<0..*>>
    Reference conditionsBeforeMark : Condition<<0..*>>
    Attribute expressionsAssignValueAfterMark : EString<<0..*>>
    Reference conditionsAfterMark : Condition<<0..*>>

  Class RestrictionClause
    Attribute expr1 : EString
    Attribute operator : ComparationOperator

  Class Restriction -> RestrictionClause
    Attribute expr2 : EString
    Attribute message : EString

  Class RestrictionGas -> RestrictionClause
    Attribute amount : EString
    Attribute typeCoin : Coin
    Attribute message : EString

  Class Assert -> RestrictionClause
    Attribute expr2 : EString

  Class Mapping
    Reference type : MappingDeclaration
    Attribute array : EString
    Attribute constant : EString
    Attribute visibility : Visibility
    Attribute storageData : StorageData
    Attribute nameMapping : EString
    Attribute inicialization : EString

  Class MappingDeclaration -> InputParam
    Attribute key : EString
    Attribute value : EString
    Reference valueIdentifier : MappingDeclaration

  Class PersonalizedStruct
    Attribute name : EString
    Reference properties : Properties<<0..*>>
    Reference mapping : Mapping<<0..*>>
    Reference structs : PersonalizedStruct<<0..*>>

  Class User
    Attribute name : EString
    Attribute nameAttributeAddress : EString
    Attribute nameAttributeUser : EString
    Attribute nameAttributeSurnameUser : EString
    Attribute emailAttributeUser : EString
    Reference properties : Properties<<0..*>>
    Reference mapping : Mapping<<0..*>>
    Reference structs : PersonalizedStruct<<0..*>>

  Class Company
    Attribute name : EString
    Attribute nameAttributeAddress : EString
    Attribute nameAttributeCompany : EString
    Attribute nameAttributeCity : EString
    Attribute emailAttributeCompany : EString
    Reference properties : Properties<<0..*>>
    Reference mapping : Mapping<<0..*>>
    Reference structs : PersonalizedStruct<<0..*>>

  Class Enum -> EDataType
    Attribute nameEnumerator : EString
    Attribute values : EString<<0..*>>

  Class OverrideModifier
    Reference inputparamsOverride : InputParam<<0..*>>

  Class Properties
    Attribute type : EString
    Attribute array : EString
    Attribute constant : EString
    Attribute visibility : Visibility
    Attribute storageData : StorageData
    Attribute name : EString
    Attribute inicialization : EString

  Class PropertyString -> Properties

  Class PropertyInteger -> Properties

  Class PropertyFloat -> Properties

  Class PropertyUInteger -> Properties

  Class PropertyBoolean -> Properties

  Class PropertyAddress -> Properties

  Class PropertyIdentifier -> Properties

  Class PropertyUser -> Properties

  Class PropertyCompany -> Properties

  Class PropertyBytes -> Properties

  Class InputParam
    Attribute type : EString
    Attribute array : EString
    Attribute indexed : EString
    Attribute storageData : StorageData
    Attribute valueInput : EString

  Class OutputParam
    Attribute type : EString
    Attribute array : EString
    Attribute storageData : StorageData
    Attribute value : EString

  Class Clause
    Attribute name : EString
    Reference inputParams : InputParam<<0..*>>
    Attribute constant : EString
    Attribute virtual : EString
    Attribute visibilityAccess : Visibility
    Reference personalizedModifier : Modifier<<0..*>>
    Reference inputParamsModifier : InputParam<<0..*>>
    Attribute predefinedModifier : InputModifier
    Reference override : OverrideModifier
    Reference outputParams : OutputParam<<0..*>>
    Reference restriction : RestrictionClause<<0..*>>
    Reference conditions : Condition<<0..*>>
    Reference properties : Properties<<0..*>>
    Reference mappingProperties : Mapping<<0..*>>
    Reference undeterminedloops : UnDeterminedLoop<<0..*>>
    Reference determinedloops : ForLoop<<0..*>>
    Attribute expressions : EString<<0..*>>
    Attribute predefinedFunctions : EString<<0..*>>
    Reference event : Event<<0..*>>
    Reference inputParamsEvent : InputParam<<0..*>>

  Class Condition
    Attribute condition : EString
    Reference restriction : RestrictionClause<<0..*>>
    Reference properties : Properties<<0..*>>
    Attribute expressions : EString<<0..*>>
    Reference conditionalExpr : Condition<<0..*>>
    Reference undeterminedloops : UnDeterminedLoop<<0..*>>
    Reference determinedloops : ForLoop<<0..*>>
    Reference event : Event<<0..*>>
    Reference inputParamsEvent : InputParam<<0..*>>
    Reference restrictionElse : RestrictionClause<<0..*>>
    Reference propertiesElse : Properties<<0..*>>
    Attribute expressionsElse : EString<<0..*>>
    Reference conditionalExprElse : Condition<<0..*>>
    Reference undeterminedloopsElse : UnDeterminedLoop<<0..*>>
    Reference determinedloopsElse : ForLoop<<0..*>>
    Reference eventElse : Event<<0..*>>
    Reference inputParamsEventElse : InputParam<<0..*>>

  Class UnDeterminedLoop
    Attribute condition : EString
    Reference gasrestriction : RestrictionGas<<0..*>>
    Reference restriction : RestrictionClause<<0..*>>
    Reference conditions : Condition<<0..*>>
    Reference undeterminedloops : UnDeterminedLoop<<0..*>>
    Reference determinedloops : ForLoop<<0..*>>
    Reference event : Event<<0..*>>
    Reference inputParams : InputParam<<0..*>>
    Attribute expressions : EString<<0..*>>

  Class WhileLoop -> UnDeterminedLoop
    Reference properties : Properties<<0..*>>

  Class ForLoop
    Attribute typeCounter : EString
    Attribute nameCounter : EString
    Attribute value : EInt
    Attribute valueCounter : EChar
    Attribute condition : EString
    Reference gasrestriction : RestrictionGas<<0..*>>
    Reference restriction : RestrictionClause<<0..*>>
    Reference properties : Properties<<0..*>>
    Reference conditions : Condition<<0..*>>
    Reference undeterminedloops : UnDeterminedLoop<<0..*>>
    Reference determinedloops : ForLoop<<0..*>>
    Attribute expressions : EString<<0..*>>

  Class DoWhileLoop -> UnDeterminedLoop

  Enum InputModifier
    Literal VIEW = 0
    Literal PURE = 1
    Literal PAYABLE = 2

  Enum StorageData
    Literal MEMORY = 0
    Literal STORAGE = 1
    Literal CALLDATA = 2

  Enum Visibility
    Literal PUBLIC = 0
    Literal PRIVATE = 1
    Literal INTERNAL = 2
    Literal EXTERNAL = 3

  Enum Coin
    Literal ETHER = 0
    Literal WEI = 1
    Literal GWEI = 2
    Literal PWEI = 3
    Literal FINNEY = 4
    Literal SZABO = 5

  Enum LoopOperator
    Literal DECREMENT = 0
    Literal INCREMENT = 1

  Enum ComparationOperator
    Literal GreatherThan = 0
    Literal LessThan = 1
    Literal GreatherOrEqualThan = 2
    Literal LessOrEqualThan = 3
    Literal EqualTo = 4
    Literal NotEqualTo = 5

  Enum LogicalPairOperator
    Literal AND = 0
    Literal OR = 1

  Enum ArithmeticalOperator
    Literal ADD = 0
    Literal SUBTRACT = 1
    Literal MULTIPLY = 2
    Literal DIVIDE = 3
    Literal MODULO = 4

  Enum AssignmentOperator
    Literal ASSIGNMENT = 0
    Literal ADDASSIGNMENT = 1
    Literal LESSASSIGNMENT = 2
    Literal MULTIPLYASSIGNMENT = 3
    Literal DIVIDEASSIGNMENT = 4
    Literal MODULOASSIGNMENT = 5

  Enum TimeUnit
    Literal SECONDS = 0
    Literal MINUTES = 1
    Literal HOURS = 2
    Literal DAYS = 3
    Literal WEEKS = 4
    Literal YEARS = 5
