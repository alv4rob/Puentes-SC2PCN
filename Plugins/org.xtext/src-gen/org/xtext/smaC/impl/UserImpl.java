/**
 * generated by Xtext 2.34.0
 */
package org.xtext.smaC.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.smaC.Mapping;
import org.xtext.smaC.PersonalizedStruct;
import org.xtext.smaC.Properties;
import org.xtext.smaC.SmaCPackage;
import org.xtext.smaC.User;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>User</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getNameAttributeAddress <em>Name Attribute Address</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getNameAttributeUser <em>Name Attribute User</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getNameAttributeSurnameUser <em>Name Attribute Surname User</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getEmailAttributeUser <em>Email Attribute User</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getMapping <em>Mapping</em>}</li>
 *   <li>{@link org.xtext.smaC.impl.UserImpl#getStructs <em>Structs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UserImpl extends MinimalEObjectImpl.Container implements User
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getNameAttributeAddress() <em>Name Attribute Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeAddress()
   * @generated
   * @ordered
   */
  protected static final String NAME_ATTRIBUTE_ADDRESS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNameAttributeAddress() <em>Name Attribute Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeAddress()
   * @generated
   * @ordered
   */
  protected String nameAttributeAddress = NAME_ATTRIBUTE_ADDRESS_EDEFAULT;

  /**
   * The default value of the '{@link #getNameAttributeUser() <em>Name Attribute User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeUser()
   * @generated
   * @ordered
   */
  protected static final String NAME_ATTRIBUTE_USER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNameAttributeUser() <em>Name Attribute User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeUser()
   * @generated
   * @ordered
   */
  protected String nameAttributeUser = NAME_ATTRIBUTE_USER_EDEFAULT;

  /**
   * The default value of the '{@link #getNameAttributeSurnameUser() <em>Name Attribute Surname User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeSurnameUser()
   * @generated
   * @ordered
   */
  protected static final String NAME_ATTRIBUTE_SURNAME_USER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNameAttributeSurnameUser() <em>Name Attribute Surname User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameAttributeSurnameUser()
   * @generated
   * @ordered
   */
  protected String nameAttributeSurnameUser = NAME_ATTRIBUTE_SURNAME_USER_EDEFAULT;

  /**
   * The default value of the '{@link #getEmailAttributeUser() <em>Email Attribute User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmailAttributeUser()
   * @generated
   * @ordered
   */
  protected static final String EMAIL_ATTRIBUTE_USER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmailAttributeUser() <em>Email Attribute User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmailAttributeUser()
   * @generated
   * @ordered
   */
  protected String emailAttributeUser = EMAIL_ATTRIBUTE_USER_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<Properties> properties;

  /**
   * The cached value of the '{@link #getMapping() <em>Mapping</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMapping()
   * @generated
   * @ordered
   */
  protected EList<Mapping> mapping;

  /**
   * The cached value of the '{@link #getStructs() <em>Structs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructs()
   * @generated
   * @ordered
   */
  protected EList<PersonalizedStruct> structs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UserImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmaCPackage.Literals.USER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmaCPackage.USER__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNameAttributeAddress()
  {
    return nameAttributeAddress;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNameAttributeAddress(String newNameAttributeAddress)
  {
    String oldNameAttributeAddress = nameAttributeAddress;
    nameAttributeAddress = newNameAttributeAddress;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmaCPackage.USER__NAME_ATTRIBUTE_ADDRESS, oldNameAttributeAddress, nameAttributeAddress));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNameAttributeUser()
  {
    return nameAttributeUser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNameAttributeUser(String newNameAttributeUser)
  {
    String oldNameAttributeUser = nameAttributeUser;
    nameAttributeUser = newNameAttributeUser;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmaCPackage.USER__NAME_ATTRIBUTE_USER, oldNameAttributeUser, nameAttributeUser));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNameAttributeSurnameUser()
  {
    return nameAttributeSurnameUser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNameAttributeSurnameUser(String newNameAttributeSurnameUser)
  {
    String oldNameAttributeSurnameUser = nameAttributeSurnameUser;
    nameAttributeSurnameUser = newNameAttributeSurnameUser;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmaCPackage.USER__NAME_ATTRIBUTE_SURNAME_USER, oldNameAttributeSurnameUser, nameAttributeSurnameUser));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEmailAttributeUser()
  {
    return emailAttributeUser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEmailAttributeUser(String newEmailAttributeUser)
  {
    String oldEmailAttributeUser = emailAttributeUser;
    emailAttributeUser = newEmailAttributeUser;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmaCPackage.USER__EMAIL_ATTRIBUTE_USER, oldEmailAttributeUser, emailAttributeUser));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Properties> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<Properties>(Properties.class, this, SmaCPackage.USER__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Mapping> getMapping()
  {
    if (mapping == null)
    {
      mapping = new EObjectContainmentEList<Mapping>(Mapping.class, this, SmaCPackage.USER__MAPPING);
    }
    return mapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PersonalizedStruct> getStructs()
  {
    if (structs == null)
    {
      structs = new EObjectContainmentEList<PersonalizedStruct>(PersonalizedStruct.class, this, SmaCPackage.USER__STRUCTS);
    }
    return structs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmaCPackage.USER__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case SmaCPackage.USER__MAPPING:
        return ((InternalEList<?>)getMapping()).basicRemove(otherEnd, msgs);
      case SmaCPackage.USER__STRUCTS:
        return ((InternalEList<?>)getStructs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmaCPackage.USER__NAME:
        return getName();
      case SmaCPackage.USER__NAME_ATTRIBUTE_ADDRESS:
        return getNameAttributeAddress();
      case SmaCPackage.USER__NAME_ATTRIBUTE_USER:
        return getNameAttributeUser();
      case SmaCPackage.USER__NAME_ATTRIBUTE_SURNAME_USER:
        return getNameAttributeSurnameUser();
      case SmaCPackage.USER__EMAIL_ATTRIBUTE_USER:
        return getEmailAttributeUser();
      case SmaCPackage.USER__PROPERTIES:
        return getProperties();
      case SmaCPackage.USER__MAPPING:
        return getMapping();
      case SmaCPackage.USER__STRUCTS:
        return getStructs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmaCPackage.USER__NAME:
        setName((String)newValue);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_ADDRESS:
        setNameAttributeAddress((String)newValue);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_USER:
        setNameAttributeUser((String)newValue);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_SURNAME_USER:
        setNameAttributeSurnameUser((String)newValue);
        return;
      case SmaCPackage.USER__EMAIL_ATTRIBUTE_USER:
        setEmailAttributeUser((String)newValue);
        return;
      case SmaCPackage.USER__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends Properties>)newValue);
        return;
      case SmaCPackage.USER__MAPPING:
        getMapping().clear();
        getMapping().addAll((Collection<? extends Mapping>)newValue);
        return;
      case SmaCPackage.USER__STRUCTS:
        getStructs().clear();
        getStructs().addAll((Collection<? extends PersonalizedStruct>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmaCPackage.USER__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_ADDRESS:
        setNameAttributeAddress(NAME_ATTRIBUTE_ADDRESS_EDEFAULT);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_USER:
        setNameAttributeUser(NAME_ATTRIBUTE_USER_EDEFAULT);
        return;
      case SmaCPackage.USER__NAME_ATTRIBUTE_SURNAME_USER:
        setNameAttributeSurnameUser(NAME_ATTRIBUTE_SURNAME_USER_EDEFAULT);
        return;
      case SmaCPackage.USER__EMAIL_ATTRIBUTE_USER:
        setEmailAttributeUser(EMAIL_ATTRIBUTE_USER_EDEFAULT);
        return;
      case SmaCPackage.USER__PROPERTIES:
        getProperties().clear();
        return;
      case SmaCPackage.USER__MAPPING:
        getMapping().clear();
        return;
      case SmaCPackage.USER__STRUCTS:
        getStructs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmaCPackage.USER__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SmaCPackage.USER__NAME_ATTRIBUTE_ADDRESS:
        return NAME_ATTRIBUTE_ADDRESS_EDEFAULT == null ? nameAttributeAddress != null : !NAME_ATTRIBUTE_ADDRESS_EDEFAULT.equals(nameAttributeAddress);
      case SmaCPackage.USER__NAME_ATTRIBUTE_USER:
        return NAME_ATTRIBUTE_USER_EDEFAULT == null ? nameAttributeUser != null : !NAME_ATTRIBUTE_USER_EDEFAULT.equals(nameAttributeUser);
      case SmaCPackage.USER__NAME_ATTRIBUTE_SURNAME_USER:
        return NAME_ATTRIBUTE_SURNAME_USER_EDEFAULT == null ? nameAttributeSurnameUser != null : !NAME_ATTRIBUTE_SURNAME_USER_EDEFAULT.equals(nameAttributeSurnameUser);
      case SmaCPackage.USER__EMAIL_ATTRIBUTE_USER:
        return EMAIL_ATTRIBUTE_USER_EDEFAULT == null ? emailAttributeUser != null : !EMAIL_ATTRIBUTE_USER_EDEFAULT.equals(emailAttributeUser);
      case SmaCPackage.USER__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case SmaCPackage.USER__MAPPING:
        return mapping != null && !mapping.isEmpty();
      case SmaCPackage.USER__STRUCTS:
        return structs != null && !structs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", nameAttributeAddress: ");
    result.append(nameAttributeAddress);
    result.append(", nameAttributeUser: ");
    result.append(nameAttributeUser);
    result.append(", nameAttributeSurnameUser: ");
    result.append(nameAttributeSurnameUser);
    result.append(", emailAttributeUser: ");
    result.append(emailAttributeUser);
    result.append(')');
    return result.toString();
  }

} //UserImpl
