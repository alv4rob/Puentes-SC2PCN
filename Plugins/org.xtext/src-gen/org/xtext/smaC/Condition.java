/**
 * generated by Xtext 2.34.0
 */
package org.xtext.smaC;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Condition</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaC.Condition#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getRestriction <em>Restriction</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getExpressions <em>Expressions</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getConditionalExpr <em>Conditional Expr</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getUndeterminedloops <em>Undeterminedloops</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getDeterminedloops <em>Determinedloops</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getEvent <em>Event</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getInputParamsEvent <em>Input Params Event</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getRestrictionElse <em>Restriction Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getPropertiesElse <em>Properties Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getExpressionsElse <em>Expressions Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getConditionalExprElse <em>Conditional Expr Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getUndeterminedloopsElse <em>Undeterminedloops Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getDeterminedloopsElse <em>Determinedloops Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getEventElse <em>Event Else</em>}</li>
 *   <li>{@link org.xtext.smaC.Condition#getInputParamsEventElse <em>Input Params Event Else</em>}</li>
 * </ul>
 *
 * @see org.xtext.smaC.SmaCPackage#getCondition()
 * @model
 * @generated
 */
public interface Condition extends EObject
{
  /**
   * Returns the value of the '<em><b>Condition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' attribute.
   * @see #setCondition(String)
   * @see org.xtext.smaC.SmaCPackage#getCondition_Condition()
   * @model
   * @generated
   */
  String getCondition();

  /**
   * Sets the value of the '{@link org.xtext.smaC.Condition#getCondition <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' attribute.
   * @see #getCondition()
   * @generated
   */
  void setCondition(String value);

  /**
   * Returns the value of the '<em><b>Restriction</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.RestrictionClause}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Restriction</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Restriction()
   * @model containment="true"
   * @generated
   */
  EList<RestrictionClause> getRestriction();

  /**
   * Returns the value of the '<em><b>Properties</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.Properties}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Properties</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Properties()
   * @model containment="true"
   * @generated
   */
  EList<Properties> getProperties();

  /**
   * Returns the value of the '<em><b>Expressions</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expressions</em>' attribute list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Expressions()
   * @model unique="false"
   * @generated
   */
  EList<String> getExpressions();

  /**
   * Returns the value of the '<em><b>Conditional Expr</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.Condition}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Conditional Expr</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_ConditionalExpr()
   * @model containment="true"
   * @generated
   */
  EList<Condition> getConditionalExpr();

  /**
   * Returns the value of the '<em><b>Undeterminedloops</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.UnDeterminedLoop}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Undeterminedloops</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Undeterminedloops()
   * @model containment="true"
   * @generated
   */
  EList<UnDeterminedLoop> getUndeterminedloops();

  /**
   * Returns the value of the '<em><b>Determinedloops</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.ForLoop}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Determinedloops</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Determinedloops()
   * @model containment="true"
   * @generated
   */
  EList<ForLoop> getDeterminedloops();

  /**
   * Returns the value of the '<em><b>Event</b></em>' reference list.
   * The list contents are of type {@link org.xtext.smaC.Event}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Event</em>' reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_Event()
   * @model
   * @generated
   */
  EList<Event> getEvent();

  /**
   * Returns the value of the '<em><b>Input Params Event</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.InputParam}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Input Params Event</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_InputParamsEvent()
   * @model containment="true"
   * @generated
   */
  EList<InputParam> getInputParamsEvent();

  /**
   * Returns the value of the '<em><b>Restriction Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.RestrictionClause}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Restriction Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_RestrictionElse()
   * @model containment="true"
   * @generated
   */
  EList<RestrictionClause> getRestrictionElse();

  /**
   * Returns the value of the '<em><b>Properties Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.Properties}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Properties Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_PropertiesElse()
   * @model containment="true"
   * @generated
   */
  EList<Properties> getPropertiesElse();

  /**
   * Returns the value of the '<em><b>Expressions Else</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expressions Else</em>' attribute list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_ExpressionsElse()
   * @model unique="false"
   * @generated
   */
  EList<String> getExpressionsElse();

  /**
   * Returns the value of the '<em><b>Conditional Expr Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.Condition}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Conditional Expr Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_ConditionalExprElse()
   * @model containment="true"
   * @generated
   */
  EList<Condition> getConditionalExprElse();

  /**
   * Returns the value of the '<em><b>Undeterminedloops Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.UnDeterminedLoop}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Undeterminedloops Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_UndeterminedloopsElse()
   * @model containment="true"
   * @generated
   */
  EList<UnDeterminedLoop> getUndeterminedloopsElse();

  /**
   * Returns the value of the '<em><b>Determinedloops Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.ForLoop}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Determinedloops Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_DeterminedloopsElse()
   * @model containment="true"
   * @generated
   */
  EList<ForLoop> getDeterminedloopsElse();

  /**
   * Returns the value of the '<em><b>Event Else</b></em>' reference list.
   * The list contents are of type {@link org.xtext.smaC.Event}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Event Else</em>' reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_EventElse()
   * @model
   * @generated
   */
  EList<Event> getEventElse();

  /**
   * Returns the value of the '<em><b>Input Params Event Else</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.smaC.InputParam}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Input Params Event Else</em>' containment reference list.
   * @see org.xtext.smaC.SmaCPackage#getCondition_InputParamsEventElse()
   * @model containment="true"
   * @generated
   */
  EList<InputParam> getInputParamsEventElse();

} // Condition
